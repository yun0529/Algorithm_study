/*
* Dinamic Programming
* 완탐을 진행할 때 하위 문제에 대한 내용을 저장하여
* 중복되는 부분을 반복해서 풀지 않도록 하는 방법
* 
* 1. 참조투명성을 가져야 함. -> 입력을 제외한 외적요소에 결과값이 영향을 미치지 않아야 함.
* 2. Overlapping Subproblem -> 겹치는 부분 문제가 존재하여야 함. (피보나치 수열)
* 3. Optimal Substructure -> 최적 부분구조 를 가지고 있어야 DP가 가능. (피보나치 수열)
* 4. DAG(Directed Acyclic Graph) -> 방향성이 있고 사이클이 없는 구조여야 함.
* 
* 일단 완탐으로 먼저 문제가 풀리는지 확인
* 경우의 수가 너무 많다면 메모이제이션을 생각해야 함. -> 결과값을 배열, set 등의 자료구조에 저장하는 것.
* 메모리제이션에서 배열의 크기가 너무 크다면 dp가 아니라 그리디 or 다른 알고리즘 고려.
* 
* => 모든 경우의 수를 생각하고, 완탐 하듯이 하고, 메모이제이션 함.
* => idx에서 필요한 값에 따라 2차원, 3차원 늘려나감.
* 
* 맵, 셋, 배열 등에 상태값을 저장함
*/

